# Traefik has an issue with persistent volumes
# https://github.com/traefik/traefik-helm-chart/issues/164
# It seems it is required to use
# persistence:
#   annotations: {
#    "pv.beta.kubernetes.io/gid": "65532"
#   }
# Explanation
# https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/
# Storage configured with a group ID (GID) allows writing only by Pods using the same GID. Mismatched or missing GIDs cause permission denied errors. To reduce the need for coordination with users, an administrator can annotate a PersistentVolume with a GID. Then the GID is automatically added to any Pod that uses the PersistentVolume.

deployment:
  initContainers:
  - name:  set-volume-permissions
    image: "busybox:1.31.1"
    command:
    - sh
    - -c
    - chmod 700 /data;chown 65532.65532 /data; if [ -f /data/acme.json ]; then chmod 0600 /data/acme.json; fi
    volumeMounts:
    - name: data
      mountPath: /data
    securityContext:
      privileged: true

ingressRoute:
  dashboard:
    enabled: false

logs:
  general:
    level: INFO

ports:
  web:
{% if helm_chart_version_canonical is version("26.0.0", '>=' ) %}
    redirectTo:
      port: websecure
{% else %}
    redirectTo: websecure
{% endif %}
{% for port in traefik_ports %}
  {{ port.name }}:
    port: {{ port.value }}
    expose: true
    exposedPort: {{ port.value }}
    protocol: TCP
{% endfor %}

service:
  spec:
    loadBalancerIP: "{{ traefik_loadbalancer_ip }}"
  annotations:
    metallb.universe.tf/address-pool: loadbalanced

ingressClass:
  enabled: 'false'

persistence:
  enabled: 'true'
  accessMode: {{ traefik_persistent_volume_access_modes |default('ReadWriteMany') }}
  size: 128Mi
  storageClass: {{ traefik_persistence_storage_class }}
  annotations:
    pv.beta.kubernetes.io/gid: "65532"

affinity:     {{ traefik_affinity }}
nodeSelector: {{ traefik_node_selector }}
tolerations:  {{ traefik_tolerations }}

image:
  registry: {{ '"' + traefik_image_registry + '"' if traefik_image_registry is defined and traefik_image_registry | length }}
  repository: {{ '"' + traefik_image_repository + '"' if traefik_image_repository is defined and traefik_image_repository | length }}
  tag:   {{ '"' + traefik_image_tag + '"'  if traefik_image_tag  is defined and traefik_image_tag  | length }}

additionalArguments:
{% for item in traefik_values_additional_arguments %}
- {{ item }}
{% endfor %}

env:
{% for item in traefik_values_env %}
- name:  "{{ item.name }}"
  value: "{{ item.value }}"
{% endfor %}
