# DNS
cert_manager_domain:       "example.com"
cert_manager_subdomain:    ""
cert_manager_hostname:     "cert-manager"

# Deployment Method: argocd, helm
cert_manager_deployment:    "helm"

# Kubernetes
cert_manager_namespace:    "cert-manager"

# Argocd
cert_manager_argocd_project:            "default"
cert_manager_argocd_namespace:          "argo-cd"
cert_manager_argocd_destination_server: "https://kubernetes.default.svc"

# Helm Chart
cert_manager_helm_release_name:  cert-manager

cert_manager_helm_repo_name:     jetstack
cert_manager_helm_repo_url:      https://charts.jetstack.io
cert_manager_helm_chart_name:    cert-manager
cert_manager_helm_chart_version: ''        # empty strings means pick latest
# cert_manager_helm_chart_version: '~^1\.11\.'    # pick by regular expression
# cert_manager_helm_chart_version: "1.11.0" # set absolute version

# Github Repository
cert_manager_releases_jmespath: "[].tag_name"
cert_manager_github_project_url:     "https://api.github.com/repos/vmware-tanzu/velero/releases"
cert_manager_github_project_version: ''
# cert_manager_github_project_version: 'v1.7.1'
# cert_manager_github_project_version: '~^v1\.7\.' # pick first match of regular expression

# Configuration Database
cert_manager_root_credentials_dir: "{{ playbook_dir }}/credentials"
cert_manager_force_string_dict:
  # path_list:
  #   - 'ingress.annotations.traefik\.ingress\.kubernetes\.io\/router\.tls'
  path_regex_list:
    - '.*\.annotations\.traefik\\\.ingress\\\.kubernetes\\\.io\\\/router\\\.tls$'
    # - '^env\['
