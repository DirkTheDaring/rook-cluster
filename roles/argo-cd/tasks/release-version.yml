- name: get available releases
  block:
  - uri:
      url:            "{{ argocd_releases_url }}"
      return_content: no
    register: argocd_releases

  - name: extract releases
    set_fact:
      argocd_releases: "{{ argocd_releases.json | to_json | from_json | json_query(argocd_releases_jmespath) }}"

  - name: show available releases 
    debug:
      msg:       "argocd_releases: {{ argocd_releases }}"
      verbosity: 2

  - name: filter releases if a regex was specified
    set_fact:
      argocd_releases: "{{ argocd_releases | select('match', argocd_release[1:] ) |list }}"
    when: argocd_release.startswith("~")

  - name: fail when there are no releases to pick available
    fail:
     msg: "no release found: argocd_release={{ argocd_release }}"
    when: argocd_releases|length == 0
      
  - name: pick first item as release
    set_fact:
      argocd_release: "{{ argocd_releases[0] }}"

  when: argocd_release is defined and argocd_release.startswith("~")

- debug:
    msg:       "argocd_release: {{ argocd_release | default('< not enforced >') }}"
    verbosity: 2

