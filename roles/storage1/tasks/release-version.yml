- name: get available releases
  block:
  - uri:
      url:            "{{ storage1_releases_url }}"
      return_content: no
    register: storage1_releases

  - name: extract releases
    set_fact:
      storage1_releases: "{{ storage1_releases.json | to_json | from_json | json_query(storage1_releases_jmespath) }}"

  - name: show available releases
    debug:
      msg:       "storage1_releases: {{ storage1_releases }}"
      verbosity: 2

  - name: filter releases if a regex was specified
    set_fact:
      storage1_releases: "{{ storage1_releases | select('match', storage1_release[1:] ) |list }}"
    when: storage1_release.startswith("~")

  - name: fail when there are no releases to pick available
    fail:
     msg: "no release found: storage1_release={{ storage1_release }}"
    when: storage1_releases|length == 0

  - name: pick first item as release
    set_fact:
      storage1_release: "{{ storage1_releases[0] }}"

  when: storage1_release is defined and storage1_release.startswith("~")

- debug:
    msg:       "storage1_release: {{ storage1_release | default('< not enforced >') }}"
    verbosity: 2

