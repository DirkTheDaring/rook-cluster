# DNS
minio_domain:       "example.com"
minio_subdomain:    ""
minio_gui_hostname: "minio"
minio_api_hostname: "s3"

# Deployment Method: argocd, helm
minio_deployment:    "helm"

# Kubernetes
minio_namespace:    "minio"

# Argocd
minio_argocd_project:            "default"
minio_argocd_namespace:          "argo-cd"
minio_argocd_destination_server: "https://kubernetes.default.svc"

# Helm Chart
minio_helm_release_name:  minio

minio_helm_repo_name:     bitnami
minio_helm_repo_url:      https://charts.bitnami.com/bitnami
minio_helm_chart_name:    minio
minio_helm_chart_version: ''        # empty strings means pick latest
# minio_helm_chart_version: '~^8\.1\.'    # pick by regular expression
# minio_helm_chart_version: "8.1.9" # set absolute version

# Github Repository
minio_releases_jmespath: "[].tag_name"
minio_github_project_url:     "https://api.github.com/repos/minio/minio/releases"
minio_github_project_version: ""
# minio_github_project_version: '~[0-9]+\.[0-9]+\.[0-9]+$' # only release which do not have tags like -rc1 or -rc2

# Configuration Database
minio_root_credentials_dir: "{{ playbook_dir }}/credentials"
minio_force_string_dict:
  # path_list:
  #   - 'ingress.annotations.traefik\.ingress\.kubernetes\.io\/router\.tls'
  path_regex_list:
    - '.*\.annotations\.traefik\\\.ingress\\\.kubernetes\\\.io\\\/router\\\.tls$'
    # - '^env\['
# only if nfs-static

minio_nfs_enabled:        false
# minio_nfs_server:         nfs.example.com
# minio_nfs_path:           /nfs/share
minio_persistence_storage_class: nfs-static

# minio_additional_parameters:

minio_nfs_mount_options: []
  # - nfsvers=3
  # - noac

minio_bucket_names: []

minio_ingress_tls: false

minio_image_tag: ""
minio_image_repository: ""

minio_ingress_tls: false
minio_ingress_tls_quirk: false

minio_apiingress_tls: false
minio_apiingress_tls_quirk: false
minio_ingress_ingressclassname: ""
minio_apiingress_ingressclassname: ""
