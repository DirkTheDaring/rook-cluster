- name: Get available releases
  when: rook_release is defined and rook_release.startswith("~")
  block:
    - name: Get url
      ansible.builtin.uri:
        url:            "{{ rook_releases_url }}"
        return_content: false
      register: rook_releases

    - name: Extract releases
      ansible.builtin.set_fact:
        rook_releases: "{{ rook_releases.json | to_json | from_json | json_query(rook_releases_jmespath) }}"

    - name: Show available releases
      ansible.builtin.debug:
        msg:       "rook_releases: {{ rook_releases }}"
        verbosity: 2

    - name: Filter releases if a regex was specified
      ansible.builtin.set_fact:
        rook_releases: "{{ rook_releases | select('match', rook_release[1:]) | list }}"
      when: rook_release.startswith("~")

    - name: Fail when there are no releases to pick available
      ansible.builtin.fail:
        msg: "no release found: rook_release={{ rook_release }}"
      when: rook_releases|length == 0

    - name: Pick first item as release
      ansible.builtin.set_fact:
        rook_release: "{{ rook_releases[0] }}"

- name: Debug
  ansible.builtin.debug:
    msg:       "rook_release: {{ rook_release | default('< not enforced >') }}"
    verbosity: 2
