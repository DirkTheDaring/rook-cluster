- name: Save configuration
  when: not rabbitmq_config_file.stat.exists
  block:
      # kubectl -n rabbitmq get secret rabbitmq -o custom-columns=name:metadata.name --no-headers
    - name: Wait until the secret exists
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: rabbitmq
        namespace: rabbitmq
      register:  rabbitmq_secret_info
      until: rabbitmq_secret_info.resources | length > 0
      retries: 1000  # Adjust the number of retries as needed
      delay: 5       # Wait 5 seconds between retries

      # kubectl get secret --namespace rabbitmq rabbitmq -o jsonpath="{.data.rabbitmq-password}" | base64 --decode
    - name: Extract and decode the rabbitmq-password
      ansible.builtin.set_fact:
        rabbitmq_auth_username:     "user"
        rabbitmq_auth_password:     "{{ rabbitmq_secret_info.resources[0].data['rabbitmq-password'] | b64decode }}"
        rabbitmq_auth_erlangcookie: "{{ rabbitmq_secret_info.resources[0].data['rabbitmq-erlang-cookie'] | b64decode }}"

    - name: Debug
      ansible.builtin.debug:
        msg: "{{ rabbitmq_auth_username }}"
    - name: Debug
      ansible.builtin.debug:
        msg: "{{ rabbitmq_auth_password }}"
    - name: Debug
      ansible.builtin.debug:
        msg: "{{ rabbitmq_auth_erlangcookie }}"

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ rabbitmq_credentials_dir }}"
        state: directory
        mode: '0700'

    - name: Create web.json
      ansible.builtin.template:
        src: "web.json.jinja2"
        dest: "{{ rabbitmq_credentials_dir }}/web.json"
        mode: '0644'
