# DNS
harbor_domain:       "example.com"
harbor_subdomain:    ""
harbor_core_hostname: "harbor"
harbor_notary_hostname: "notary"

# Deployment Method: argocd, helm
harbor_deployment:    "helm"

# Kubernetes
harbor_namespace:    "harbor"

# Argocd
harbor_argocd_project:            "default"
harbor_argocd_namespace:          "argo-cd"
harbor_argocd_destination_server: "https://kubernetes.default.svc"

# Helm Chart
harbor_helm_release_name:  harbor

harbor_helm_repo_name:     harbor
harbor_helm_repo_url:      https://helm.goharbor.io
harbor_helm_chart_name:    harbor
harbor_helm_chart_version: ''        # empty strings means pick latest
# harbor_helm_chart_version: '~^1\.12\.'    # pick by regular expression
# harbor_helm_chart_version: "1.12.0" # set absolute version

# Github Repository
harbor_releases_jmespath: "[].tag_name"
harbor_github_project_url:     "https://api.github.com/repos/goharbor/harbor/releases"
harbor_github_project_version: ''
# harbor_github_project_version: 'v2.4.1'
# harbor_github_project_version: '~^v2\.4\.' # pick first match of regular expression

# Configuration Database
harbor_root_credentials_dir: "{{ playbook_dir }}/credentials"
harbor_node_selector_hostname: ""

harbor_persistence_storage_class: nfs-client
# harbor_persistence_database_storage_class: nfs-client

harbor_persistence_accessmode: ReadWriteOnce

harbor_persistence_size_database: 5Gi
harbor_persistence_size: 1Gi

harbor_expose_tls_enabled: false
harbor_cluster_issuer_name: ""
harbor_expose_ingress_classname: ""

harbor_force_string_dict:
  # path_list:
  #   - 'ingress.annotations.traefik\.ingress\.kubernetes\.io\/router\.tls'
  path_regex_list:
    - '.*\.annotations\.traefik\\\.ingress\\\.kubernetes\\\.io\\\/router\\\.tls$'
    # - '^env\['

harbor_metrics_enabled: false
