{% if  argocd_release is defined and argocd_release|length != 0 %}
global:
  image:
    tag: "{{ argocd_release }}"
{% endif %}

{% if argocd_node_selector_hostname is defined and argocd_node_selector_hostname != "" %}
controller:
  nodeSelector:
    kubernetes.io/hostname: {{ argocd_node_selector_hostname }}
{% endif %}

server:
{% if argocd_node_selector_hostname is defined and argocd_node_selector_hostname != "" %}
  nodeSelector:
    kubernetes.io/hostname: {{ argocd_node_selector_hostname }}
{% endif %}
  ingress:
    enabled: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure #, jnlp needs an IngressRouteTCP object!
      traefik.ingress.kubernetes.io/router.tls: "true"
    hosts:
    - "{{ argocd_fqdn }}"

  extraArgs:
  - --insecure

  config:
    url: https://{{ argocd_fqdn }}

  service:
    #servicePortHttp:  8080
    servicePortHttps: 8080

configs:
  secret:
    gitlabSecret: {{ argocd_gitlab_secret }}

{% if argocd_node_selector_hostname is defined and argocd_node_selector_hostname != "" %}
dex:
  nodeSelector:
    kubernetes.io/hostname: {{ argocd_node_selector_hostname }}
{% endif %}

{% if argocd_node_selector_hostname is defined and argocd_node_selector_hostname != "" %}
redis:
  nodeSelector:
    kubernetes.io/hostname: {{ argocd_node_selector_hostname }}
{% endif %}
{% if argocd_node_selector_hostname is defined and argocd_node_selector_hostname != "" %}
repoServer:
  nodeSelector:
    kubernetes.io/hostname: {{ argocd_node_selector_hostname }}
{% endif %}
