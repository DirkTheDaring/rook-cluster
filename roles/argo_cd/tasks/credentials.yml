- name: Wait until secret appears
  ansible.builtin.command:
    argv:
      - bash
      - -c
      # yamllint disable-line
      - "while true; do kubectl -n {{ argocd_namespace }} get secret --no-headers -o custom-columns=name:metadata.name argocd-initial-admin-secret  && break; sleep 3; done"

  # kubectl -n argocd get secret argocd-initial-admin-secret  -o json |jq -r .data.password |base64 -d -)
  # kubectl -n argocd get secret argocd-initial-admin-secret -o custom-columns=password:data.password --no-headers
- name: Get current argocd password and store it
  ansible.builtin.command:
    argv:
      - kubectl
      - --namespace
      - "{{ argocd_namespace }}"
      - get
      - secret
      - argocd-initial-admin-secret
      - -o
      - custom-columns=password:data.password
      - --no-headers
  register: argocd_credential_result
  changed_when: argocd_credential_result.rc != 0
  failed_when:  argocd_credential_result.rc != 0

- name: Extract password
  ansible.builtin.set_fact:
#    argocd_password: "{{ argocd_credential_result.stdout | from_json | json_query('data.password') | b64decode }}"
    argocd_password: "{{ argocd_credential_result.stdout | b64decode }}"
    argocd_username: "admin"
    argocd_url:      "https://{{ argocd_fqdn }}"

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ argocd_credentials_dir }}"
    state: directory
    mode: '0700'

- name: Template
  ansible.builtin.template:
    src: "web.json.jinja2"
    dest: "{{ argocd_credentials_dir }}/web.json"
    mode: '0644'
